#!/usr/bin/python3
""" Defines the command line interpreter to manage AirBnB objects. """
import cmd
# Imports cmd class
# Entry point
# My main function is defined here
# create class that inherits from cmd class
# Define __init__ class that inherits the parent class __init__ method
# and define an empty dictionary
# set prompt to "(hbnb) "
class HBNBCommand(cmd.Cmd):
    """ Defines a ClientManager class that inherits from the cmd class """
    prompt = "(hbnb) "
    def __init__(self):
        """ Initializes a ClientManager class object """
        super().__init__()
        self.client = {} # dictionary to store clients.

    def do_EOF(self, line):
        print()
        return True

    def help_EOF(self):
        print("Terminates the command line interpreter safely using ctrl + d ")

    def do_quit(self, line):
        return True

    def help_quit(self):
        print("Quit command to exit the program")

    def do_create(self, line):
        """ creates a new object and saves it in JSON file"""
        # get class from line, store it in a variable
        # create an object suing variable
        #save that variable
        #print id of the new object
        cls_obj = self.get

        create BaseModel
        cls_obj = BaseModel #after split
        new_obj = cls_obj()
        new_obj.save()
        print(new_obj.id)

    def default(self, line):
        if len(line) ==  0:
            return
        print(f"Unknown command: {line}")


if __name__ == "__main__":
    """
    Creates a ClientManager object and parses the object to a cmdloop method
    """
    HBNBCommand().cmdloop()
